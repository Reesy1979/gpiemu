
PREFIX = 
TOOLCHAIN = /usr

TARGET=smsplus.bin

APP_FILE    = SMSplus
APP_VERSION = 1.4
APP_NAME    = GPI SMS/GG/COLECO emulator
APP_TYPES   = SMS|GG|SG|COL|ROM

# If you have any directories with include files, add them here with -I on
# the front of each

PLATFORM = platform.linux.sdl
                
# Platform sources
PLATFORM_SRC  = ../platform/$(PLATFORM) \
               	../platform/components \
            	../platform/components/zip \
            	../platform

# Platform includes
PLATFORM_INC  = -I ../platform/$(PLATFORM) \
            	-I ../platform/components \
            	-I ../platform/components/zip \
            	-I ../platform \
            	-I /usr/include/libpng16 \
		-I $(TOOLCHAIN)/include \
		-I $(TOOLCHAIN)/include/SDL

# Emulator sources
EMULATOR_SRC  = ./smsplus \
            	./smsplus/cpu \
            	./smsplus/sound \
            	./emulator

# Emulator includes
EMULATOR_INC  = -I ./smsplus \
            	-I ./smsplus/cpu \
            	-I ./smsplus/sound \
            	-I ./resources \
            	-I ./emulator

CPP       = $(TOOLCHAIN)/bin/g++
CC        = $(TOOLCHAIN)/bin/gcc
LD        = $(TOOLCHAIN)/bin/gcc
            	
SOURCE    = $(PLATFORM_SRC) $(EMULATOR_SRC)
INCLUDE   = $(PLATFORM_INC) $(EMULATOR_INC) 

DEFINES   = -D_LINUX -DNDEBUG
DEFINES  += -DEMU_DISPLAY_NAME="\"$(APP_NAME)\"" -DEMU_VERSION="\"$(APP_VERSION)\"" -DEMU_FILE_NAME="\"$(APP_FILE)\"" -DEMU_FILE_TYPES="\"$(APP_TYPES)\""
DEFINES  += -DLSB_FIRST
DEFINES  += -DEMU_SYS_PATH="\"./\"" -DEMU_ROM_PATH="\"./roms/sms\"" 
DEFINES  += -DDISABLE_CHEATING -DDISABLE_IPS_PATCHING

#DEFINES  += -DHAVE_ASPRINTF -DPSS_STYLE=2 -DLSB_FIRST

CC_OPTS   = -c -Wall -Wextra $(OPTIMIZE) $(INCLUDE) $(DEFINES)
CC_OPTS_A = $(CC_OPTS) -D_ASSEMBLER_
CPP_OPTS  = $(CC_OPTS) 

SRC_CPP = $(foreach dir, $(SOURCE), $(wildcard $(dir)/*.cpp))
SRC_C   = $(foreach dir, $(SOURCE), $(wildcard $(dir)/*.c))
SRC_S   = $(foreach dir, $(SOURCE), $(wildcard $(dir)/*.s))
OBJ_CPP = $(patsubst %.cpp, %.o, $(SRC_CPP))
OBJ_C   = $(patsubst %.c, %.o, $(SRC_C))
OBJ_S   = $(patsubst %.s, %.o, $(SRC_S))
OBJS    = $(OBJ_CPP) $(OBJ_C) $(OBJ_S)	
EXTRACLEAN = $(OBJS)
LIBS      = -L /usr/lib/x86_64-linux-gnu -lfreetype -lschrift -lSDL -lpthread -lz -l:libpng.a -lm -lc -L /usr/lib/gcc/x86_64-linux-gnu/12 -lstdc++ -lgcc
#LIBS      = -$(shell sdl-config --libs) -lpthread -lz -lpng -lm -lgcc -lstdc++

LD_OPTS   = -Wl,--copy-dt-needed-entries $(LIBS) 

%.o: %.s
	@echo "  AS    $@"
	@$(AS) $(AFLAGS) -c -o $@ $<

%.d: %.s
	@$(AS) $(AFLAGS) -M -MG -MT $*.o -MT $@ -MF $@ $<
	
.PHONY : all

all : $(TARGET)

$(TARGET) : $(OBJS)
	$(LD) $(OBJS) $(LD_OPTS) -o $@

$(OBJ_CPP) : %.o : %.cpp
	$(CPP) $(CPP_OPTS) -o $@ $<

$(OBJ_C) : %.o : %.c
	$(CC) $(CC_OPTS) -o $@ $<

$(OBJ_S) : %.o : %.S
	$(CC) $(CC_OPTS_A) -o $@ $<

# Clean rules

.PHONY : clean

clean :
	rm -f $(OBJS) $(TARGET)

